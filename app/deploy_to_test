#!/bin/bash

##
# @file
# OpenSourcery Drupal Deployment Script
#
# @todo This currently won't work for initial deployment to a Drupal
# host. Several things still need to be done manually the first time
# around--creating directory structure: releases, shared/files,
# modifying/uploading settings.php

# Change $SUBDOMAIN accordingly, e.g. <mountain name>
# Rather than set $USER, use the user we were run as.
SUBDOMAIN=
HOST=gargravarr
DOCUMENTROOT=/var/www/$SUBDOMAIN
INSTALLPROFILE=os_project

# Flag to disable running of `drush site-install`.
#NOSITEINSTALL=1

# Branch to deploy from
BRANCH=.

##### Things below here generally won't need to be changed #####

# If SUBDOMAIN isn't set, DOCUMENTROOT would become /var/www// and we'd blow
# away the permissions of every test host on the test server.
if [ -z "$SUBDOMAIN" ]; then
  echo "ERROR: You must set SUBDOMAIN (within $0) before running this script."
  exit 1
fi

if [ ! -d ./drupal ]; then
  echo "ERROR: ./drupal directory does not exist; nothing to deploy."
  exit 1
fi

# Test that this drush alias exists.
ALIAS=`drush sa @$SUBDOMAIN --component=root`
if [ -z "$ALIAS" ]; then
  echo "Didn't find a drush alias for $SUBDOMAIN"
  exit 1
fi

# Deploy into the releases directory.
TIMESTAMP=`date +%Y_%m_%d__%H_%M_%S`

# Add -L to copy symlinks' referent files, so that we'll bring along our install profile
cp -Rp $DOCUMENTROOT/current/ $DOCUMENTROOT/releases/$TIMESTAMP
rsync -LazC --exclude=sites/all/files --exclude=sites/default/files --exclude=sites/default/settings.php --exclude=backup $BRANCH/drupal/ $DOCUMENTROOT/releases/$TIMESTAMP/

# Create links to settings and files.
if [ ! -h $DOCUMENTROOT/releases/$TIMESTAMP/sites/default/files ]; then
  ln -s $DOCUMENTROOT/shared/files $DOCUMENTROOT/releases/$TIMESTAMP/sites/default/files
fi
if [ ! -h $DOCUMENTROOT/releases/$TIMESTAMP/sites/default/settings.php ]; then
  ln -s $DOCUMENTROOT/shared/settings.php $DOCUMENTROOT/releases/$TIMESTAMP/sites/default/settings.php
fi

# Remove old release link and link the new version.
if [ -h $DOCUMENTROOT/current ]; then
  rm $DOCUMENTROOT/current
fi
ln -s $DOCUMENTROOT/releases/$TIMESTAMP $DOCUMENTROOT/current

# Run site install unless disabled.
if [ -z $NOSITEINSTALL ]; then
  drush @$SUBDOMAIN site-install -y $INSTALLPROFILE
fi

# Run any update hooks.
drush @$SUBDOMAIN updatedb -y

# Features revert.
drush @$SUBDOMAIN fra -y

# Clear caches.
drush @$SUBDOMAIN cc all

echo "Deployment complete"
