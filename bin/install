#!/bin/bash
#
# Runs site-install from drush then enables some local modules
#
# To use this command you must have Drush installed.
#
source bin/.config

BUILD=1
TEST=1

# Parse flags to disable portions of script.
for i in $*; do
  if [[ $i = "--nobuild" ]] || [[ $i = "-nb" ]]; then
    BUILD=0
  fi
  if [[ $i = "--nohat" ]] || [[ $i = "-nh" ]]; then
    TEST=0
  fi
done

if [[ $BUILD = 1 ]]; then
  # Run the rebuild script.
  bin/rebuild
fi  

if ! ( test -e drupal ); then
  echo "I didn't find a drupal directory. Are you sure it exists?"
  exit 1
fi

# Site install.
if [[ -e db/production_current.sql.gz ]]; then
  cd db
  ./db_load.sh production_current.sql.gz
  cd -
  cd drupal
    drush updatedb -y
  cd -
else
  cd drupal
  drush site-install -y --uri=default $PROFILE
  drush fra -y
  drush cc all
  cd -
fi

# Enable modules I use locally every time.
# TODO read this from local config instead of hard-coding.
# TODO use drush aliases
cd drupal
drush en diff -y
drush en views_ui -y
drush en styleguide -y
# Enable stage file proxy module.
if [ "$PRODUCTIONURL" != "http://" ]; then
  echo "Enabling Stage File Proxy and configuring origin as '$PRODUCTIONURL'."
  drush en -y stage_file_proxy
  drush vset stage_file_proxy_origin $PRODUCTIONURL
fi
cd -

if [[ $TEST = 1 ]]; then
  # Run behat.
  cd bdd
  # Check for composer, or install
  `command -v composer > /dev/null 2>&1`
  if [[ $? -gt 0 ]]; then
    # Install locally.
    if [[ ! -e composer.phar ]]; then
      curl -sS https://getcomposer.org/installer | php
    fi
    composer_command=./composer.phar
  else
    composer_command=composer
  fi
  
  if [[ ! -e bin/behat ]]; then
    $composer_command install
  fi
  
  if [[ -e behat.local.yml ]]; then
    bin/behat
  else
    echo "Cannot run behat tests until bdd/behat.local.yml exists! Copy bdd/behat.local.yml.example into place to get started."
  fi
fi
